{
  "settings": {
    "react": {
      "version": "18.2.0"
    }
  },
  "env": {
    "browser": true,
    "es2021": true,
    "node": true,
    "jest": true
  },
  "extends": [
    "plugin:react/recommended",
    "standard",
    "plugin:@typescript-eslint/recommended",
    "plugin:@next/next/recommended",
    "plugin:react-hooks/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "prettier"
  ],
  "rules": {
    "multiline-ternary": "off",
    "indent": "off",
    "camelcase": "off",
    "max-len": ["error", {
      "code": 140
    }],
    "prettier/prettier": "error",
    "space-before-function-paren": "off",
    "react/prop-types": "off",
    "no-use-before-define": "off",
    // TODO ativar e resolver os warnings com "any"
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    // TODO ativar essa rule quando encontrar uma forma de usar <T, > sem dar conflito com o prettier
    "@typescript-eslint/no-unnecessary-type-constraint": "off",
    "@typescript-eslint/no-use-before-define": "warn",
    "@typescript-eslint/no-unused-vars": "error",
    "react/jsx-curly-brace-presence": [
      "error",
      {
        "props": "always",
        "children": "never"
      }
    ]
  }
}
